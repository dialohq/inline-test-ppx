name: Release

on:
  release:
    types: published

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-version:
          - 4.13.1

    steps:
      - uses: actions/checkout@v2

      - name: Fetch git tags
        run: git fetch --tags --force

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: "https://registry.npmjs.org"

      - name: Cache esy dependencies
        uses: actions/cache@v1
        id: cache
        with:
          path: _export
          key: ${{ runner.OS }}-build-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install esy
        run: npm install -g esy@latest

      - name: Import dependencies
        if: steps.cache.outputs.cache-hit == 'true'
        run: esy import-build _export/*

      - name: Install dependencies
        run: esy install

      - name: Build
        run: esy build --release

      - name: Substitute watermarks
        run: esy dune subst

      - name: Build subst changes
        run: esy dune build --release

      - name: Make NPM release skeleton
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: node script/release-make-skeleton.js

      - name: Upload _release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@master
        with:
          name: _release
          path: _release

      - name: Upload artifacts for ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/bin/main.exe

      - name: Export dependencies
        run: esy export-dependencies

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Download _release
        uses: actions/download-artifact@master
        with:
          name: _release
          path: _release

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: _release/platform-linux-x64

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macos-latest
          path: _release/platform-darwin-x64

      - name: Create archives for Github release
        run: |
          cd _release/platform-darwin-x64
          zip -r ../../inline-test-ppx-darwin-x64.zip .
          cd ../..

          cd _release/platform-linux-x64
          zip -r ../../inline-test-ppx-linux-x64.zip .
          cd ../..

      - name: Upload inline-test-ppx-darwin-x64.zip to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: inline-test-ppx-darwin-x64.zip
          asset_name: inline-test-ppx-darwin-x64.zip
          asset_content_type: application/gzip

      - name: Upload inline-test-ppx-linux-x64.zip to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: inline-test-ppx-linux-x64.zip
          asset_name: inline-test-ppx-linux-x64.zip
          asset_content_type: application/gzip

      - name: Publish NPM package
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm config set scope "@dialo"
          npm config list
          npm publish --access public
        working-directory: ./_release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
